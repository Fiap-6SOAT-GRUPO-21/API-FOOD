name: Build, Deploy and Apply to EKS

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t api-food:latest .

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag Docker image
        run: docker tag api-food:latest ${{ secrets.DOCKER_USERNAME }}/api-food:latest

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/api-food:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name techchallenge --region us-east-1

      - name: Get RDS credentials from SSM Parameter Store
        id: get-parameters
        run: |
          DB_URL=$(aws ssm get-parameter --name "techchallenge/rds/db_url" --with-decryption --query "Parameter.Value" --output text)
          DB_USERNAME=$(aws ssm get-parameter --name "techchallenge/rds/db_username" --with-decryption --query "Parameter.Value" --output text)
          DB_PASSWORD=$(aws ssm get-parameter --name "techchallenge/rds/db_password" --with-decryption --query "Parameter.Value" --output text)
          DB_PORT=$(aws ssm get-parameter --name "techchallenge/rds/db_port" --with-decryption --query "Parameter.Value" --output text)
          DB_NAME=$(aws ssm get-parameter --name "techchallenge/rds/db_name" --with-decryption --query "Parameter.Value" --output text)
          echo "DB_URL=$DB_URL" >> $GITHUB_ENV
          echo "DB_USERNAME=$DB_USERNAME" >> $GITHUB_ENV
          echo "DB_PASSWORD=$DB_PASSWORD" >> $GITHUB_ENV
          echo "DB_PORT=$DB_PORT" >> $GITHUB_ENV
          echo "DB_NAME=$DB_NAME" >> $GITHUB_ENV

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: '1.24.0'

      - name: Update ConfigMap with RDS credentials
        run: |
          kubectl apply -f configmap.yaml
          kubectl patch configmap app-config --type=json -p='[{"op": "replace", "path": "/data/DB_NAME", "value":"'"$DB_NAME"'"}]'
          kubectl patch configmap app-config --type=json -p='[{"op": "replace", "path": "/data/DB_URL", "value":"'"$DB_URL"'"}]'
          kubectl patch configmap app-config --type=json -p='[{"op": "replace", "path": "/data/DB_USERNAME", "value":"'"$DB_USERNAME"'"}]'
          kubectl patch configmap app-config --type=json -p='[{"op": "replace", "path": "/data/DB_PASSWORD", "value":"'"$DB_PASSWORD"'"}]'
          kubectl patch configmap app-config --type=json -p='[{"op": "replace", "path": "/data/DB_PORT", "value":"'"$DB_PORT"'"}]'

      - name: Deploy Application
        run: |
          kubectl apply -f k8s/app-configmap.yaml
          kubectl apply -f k8s/app-deployment.yaml
          kubectl apply -f k8s/app-service.yaml
          kubectl apply -f k8s/app-hpa.yaml
          kubectl apply -f k8s/metrics.yaml
          kubectl apply -f k8s/role.yaml
          kubectl apply -f k8s/rolebinding.yaml